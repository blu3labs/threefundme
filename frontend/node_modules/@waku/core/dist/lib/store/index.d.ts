import { Cursor, IDecodedMessage, IStore, Libp2p, ProtocolCreateOptions } from "@waku/interfaces";
import { PageDirection } from "./history_rpc.js";
export declare const StoreCodec = "/vac/waku/store/2.0.0-beta4";
export declare const DefaultPageSize = 10;
export { PageDirection };
export interface TimeFilter {
    startTime: Date;
    endTime: Date;
}
export interface QueryOptions {
    /**
     * The direction in which pages are retrieved:
     * - { @link PageDirection.BACKWARD }: Most recent page first.
     * - { @link PageDirection.FORWARD }: Oldest page first.
     *
     * Note: This does not affect the ordering of messages with the page
     * (the oldest message is always first).
     *
     * @default { @link PageDirection.BACKWARD }
     */
    pageDirection?: PageDirection;
    /**
     * The number of message per page.
     *
     * @default { @link DefaultPageSize }
     */
    pageSize?: number;
    /**
     * Retrieve messages with a timestamp within the provided values.
     */
    timeFilter?: TimeFilter;
    /**
     * Cursor as an index to start a query from.
     * The cursor index will be exclusive (i.e. the message at the cursor index will not be included in the result).
     * If undefined, the query will start from the beginning or end of the history, depending on the page direction.
     */
    cursor?: Cursor;
}
export declare function createCursor(message: IDecodedMessage): Promise<Cursor>;
export declare function wakuStore(init?: Partial<ProtocolCreateOptions>): (libp2p: Libp2p) => IStore;
